{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\exercise-tracker\\\\src\\\\components\\\\ExerciseProgressChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SPREADSHEET_ID = '1etKycmwV-C8aToN-XOetHg2SpMgok-mNae3RT4kq57E';\nconst API_KEY = 'AIzaSyAFiUprPTiVaN5wbUHZTO9z4H1i0r9NEQk';\nconst ExerciseProgressChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/A:W?key=${API_KEY}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const result = await response.json();\n        const values = result.values;\n        const exercises = new Set();\n        const weeklyData = [];\n        values.forEach((row, index) => {\n          if (row[0] === 'Exercise' || row[0] === 'REST') return;\n          if (row[0]) exercises.add(row[0]);\n        });\n        const numWeeks = 19;\n        for (let week = 1; week <= numWeeks; week++) {\n          const weekData = {\n            name: `wk${week}`\n          };\n          exercises.forEach(exercise => {\n            weekData[exercise] = null;\n          });\n          values.forEach(row => {\n            if (row[0] === 'Exercise' || row[0] === 'REST') return;\n            if (row[0] && row[5 + week - 1]) {\n              const value = parseFloat(row[5 + week - 1]);\n              if (!isNaN(value)) {\n                weekData[row[0]] = value;\n              }\n            }\n          });\n          weeklyData.push(weekData);\n        }\n        setExercises(Array.from(exercises));\n        setData(weeklyData);\n        setError(null);\n      } catch (error) {\n        setError('Error fetching data. Please check your API key and permissions.');\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#0088fe', '#00c49f', '#ff8042', '#a4de6c', '#d0ed57', '#83a6ed', '#8dd1e1', '#ff6b6b', '#c9b2fd', '#fdb462', '#fb8072', '#80b1d3', '#bebada', '#fccde5', '#bc80bd', '#b3de69', '#8dd3c7', '#fb9a99', '#d9d9d9', '#fdbf6f', '#e31a1c', '#ff7f00', '#6a3d9a', '#b15928'];\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 p-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-[800px] p-4\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1000,\n      height: 700,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        layout: \"vertical\",\n        align: \"right\",\n        verticalAlign: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: exercise,\n        stroke: colors[index % colors.length],\n        dot: {\n          r: 4\n        },\n        connectNulls: true\n      }, exercise, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseProgressChart, \"EUlBEl9u20jaSsCh7af0bdklqUE=\");\n_c = ExerciseProgressChart;\nexport default ExerciseProgressChart;\nvar _c;\n$RefreshReg$(_c, \"ExerciseProgressChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","SPREADSHEET_ID","API_KEY","ExerciseProgressChart","_s","data","setData","exercises","setExercises","error","setError","fetchData","response","fetch","ok","Error","result","json","values","Set","weeklyData","forEach","row","index","add","numWeeks","week","weekData","name","exercise","value","parseFloat","isNaN","push","Array","from","console","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","layout","align","verticalAlign","map","type","stroke","length","dot","r","connectNulls","_c","$RefreshReg$"],"sources":["C:/Users/danie/exercise-tracker/src/components/ExerciseProgressChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst SPREADSHEET_ID = '1etKycmwV-C8aToN-XOetHg2SpMgok-mNae3RT4kq57E';\r\nconst API_KEY = 'AIzaSyAFiUprPTiVaN5wbUHZTO9z4H1i0r9NEQk';\r\n\r\ninterface ExerciseData {\r\n  name: string;\r\n  [key: string]: string | number | null;\r\n}\r\n\r\nconst ExerciseProgressChart = () => {\r\n  const [data, setData] = useState<ExerciseData[]>([]);\r\n  const [exercises, setExercises] = useState<string[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/A:W?key=${API_KEY}`\r\n        );\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        \r\n        const result = await response.json();\r\n        const values = result.values;\r\n\r\n        const exercises = new Set<string>();\r\n        const weeklyData: ExerciseData[] = [];\r\n        \r\n        values.forEach((row: string[], index: number) => {\r\n          if (row[0] === 'Exercise' || row[0] === 'REST') return;\r\n          if (row[0]) exercises.add(row[0]);\r\n        });\r\n\r\n        const numWeeks = 19;\r\n        for (let week = 1; week <= numWeeks; week++) {\r\n          const weekData: ExerciseData = {\r\n            name: `wk${week}`\r\n          };\r\n          \r\n          exercises.forEach(exercise => {\r\n            weekData[exercise] = null;\r\n          });\r\n\r\n          values.forEach((row: string[]) => {\r\n            if (row[0] === 'Exercise' || row[0] === 'REST') return;\r\n            if (row[0] && row[5 + week - 1]) {\r\n              const value = parseFloat(row[5 + week - 1]);\r\n              if (!isNaN(value)) {\r\n                weekData[row[0]] = value;\r\n              }\r\n            }\r\n          });\r\n\r\n          weeklyData.push(weekData);\r\n        }\r\n\r\n        setExercises(Array.from(exercises));\r\n        setData(weeklyData);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError('Error fetching data. Please check your API key and permissions.');\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const colors = [\r\n    '#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#0088fe', '#00c49f',\r\n    '#ff8042', '#a4de6c', '#d0ed57', '#83a6ed', '#8dd1e1', '#ff6b6b',\r\n    '#c9b2fd', '#fdb462', '#fb8072', '#80b1d3', '#bebada', '#fccde5',\r\n    '#bc80bd', '#b3de69', '#8dd3c7', '#fb9a99', '#d9d9d9', '#fdbf6f',\r\n    '#e31a1c', '#ff7f00', '#6a3d9a', '#b15928'\r\n  ];\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500 p-4\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-[800px] p-4\">\r\n      <LineChart width={1000} height={700} data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\r\n        {exercises.map((exercise, index) => (\r\n          <Line \r\n            key={exercise}\r\n            type=\"monotone\" \r\n            dataKey={exercise} \r\n            stroke={colors[index % colors.length]}\r\n            dot={{ r: 4 }}\r\n            connectNulls\r\n          />\r\n        ))}\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseProgressChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}