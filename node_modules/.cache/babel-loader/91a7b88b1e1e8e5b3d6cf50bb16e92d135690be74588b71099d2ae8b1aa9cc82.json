{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\exercise-tracker\\\\src\\\\components\\\\ExerciseProgressChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHEET_ID = '1etKycmwV-C8aToN-XOetHg2SpMgok-mNae3RT4kq57E';\nconst SHEET_NAME = 'Workout 5 Day WTRP';\nconst ExerciseProgressChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = `https://docs.google.com/spreadsheets/d/${SHEET_ID}/gviz/tq?tqx=out:json&sheet=${SHEET_NAME}`;\n        const response = await fetch(url);\n        const text = await response.text();\n        const json = JSON.parse(text.substr(47).slice(0, -2));\n        const exercises = new Set();\n        const weeklyData = [];\n\n        // Extract exercise names\n        json.table.rows.forEach(row => {\n          var _row$c$;\n          const exerciseName = (_row$c$ = row.c[0]) === null || _row$c$ === void 0 ? void 0 : _row$c$.v;\n          if (exerciseName && exerciseName !== 'Exercise' && exerciseName !== 'REST') {\n            exercises.add(exerciseName);\n          }\n        });\n\n        // Create weekly data points\n        const numWeeks = 19;\n        for (let week = 1; week <= numWeeks; week++) {\n          const weekData = {\n            name: `wk${week}`\n          };\n          exercises.forEach(exercise => {\n            weekData[exercise] = null;\n          });\n          json.table.rows.forEach(row => {\n            var _row$c$2;\n            const exerciseName = (_row$c$2 = row.c[0]) === null || _row$c$2 === void 0 ? void 0 : _row$c$2.v;\n            if (exerciseName && exerciseName !== 'Exercise' && exerciseName !== 'REST') {\n              var _row$c;\n              const value = (_row$c = row.c[week + 4]) === null || _row$c === void 0 ? void 0 : _row$c.v; // Offset by 5 columns to start at week 1\n              if (value !== null && value !== undefined) {\n                weekData[exerciseName] = parseFloat(value);\n              }\n            }\n          });\n          weeklyData.push(weekData);\n        }\n        setExercises(Array.from(exercises));\n        setData(weeklyData);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data. Please check sheet permissions.');\n      }\n    };\n    fetchData();\n  }, []);\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#0088fe', '#00c49f', '#ff8042', '#a4de6c', '#d0ed57', '#83a6ed', '#8dd1e1', '#ff6b6b'];\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 p-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-[800px] p-4\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1000,\n      height: 700,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        layout: \"vertical\",\n        align: \"right\",\n        verticalAlign: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: exercise,\n        stroke: colors[index % colors.length],\n        dot: {\n          r: 4\n        },\n        connectNulls: true\n      }, exercise, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseProgressChart, \"EUlBEl9u20jaSsCh7af0bdklqUE=\");\n_c = ExerciseProgressChart;\nexport default ExerciseProgressChart;\nvar _c;\n$RefreshReg$(_c, \"ExerciseProgressChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","SHEET_ID","SHEET_NAME","ExerciseProgressChart","_s","data","setData","exercises","setExercises","error","setError","fetchData","url","response","fetch","text","json","JSON","parse","substr","slice","Set","weeklyData","table","rows","forEach","row","_row$c$","exerciseName","c","v","add","numWeeks","week","weekData","name","exercise","_row$c$2","_row$c","value","undefined","parseFloat","push","Array","from","console","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","layout","align","verticalAlign","map","index","type","stroke","length","dot","r","connectNulls","_c","$RefreshReg$"],"sources":["C:/Users/danie/exercise-tracker/src/components/ExerciseProgressChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst SHEET_ID = '1etKycmwV-C8aToN-XOetHg2SpMgok-mNae3RT4kq57E';\r\nconst SHEET_NAME = 'Workout 5 Day WTRP';\r\n\r\ninterface ExerciseData {\r\n  name: string;\r\n  [key: string]: string | number | null;\r\n}\r\n\r\nconst ExerciseProgressChart = () => {\r\n  const [data, setData] = useState<ExerciseData[]>([]);\r\n  const [exercises, setExercises] = useState<string[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = `https://docs.google.com/spreadsheets/d/${SHEET_ID}/gviz/tq?tqx=out:json&sheet=${SHEET_NAME}`;\r\n        const response = await fetch(url);\r\n        const text = await response.text();\r\n        const json = JSON.parse(text.substr(47).slice(0, -2));\r\n        \r\n        const exercises = new Set<string>();\r\n        const weeklyData: ExerciseData[] = [];\r\n        \r\n        // Extract exercise names\r\n        json.table.rows.forEach((row: any) => {\r\n          const exerciseName = row.c[0]?.v;\r\n          if (exerciseName && exerciseName !== 'Exercise' && exerciseName !== 'REST') {\r\n            exercises.add(exerciseName);\r\n          }\r\n        });\r\n\r\n        // Create weekly data points\r\n        const numWeeks = 19;\r\n        for (let week = 1; week <= numWeeks; week++) {\r\n          const weekData: ExerciseData = {\r\n            name: `wk${week}`\r\n          };\r\n          \r\n          exercises.forEach(exercise => {\r\n            weekData[exercise] = null;\r\n          });\r\n\r\n          json.table.rows.forEach((row: any) => {\r\n            const exerciseName = row.c[0]?.v;\r\n            if (exerciseName && exerciseName !== 'Exercise' && exerciseName !== 'REST') {\r\n              const value = row.c[week + 4]?.v;  // Offset by 5 columns to start at week 1\r\n              if (value !== null && value !== undefined) {\r\n                weekData[exerciseName] = parseFloat(value);\r\n              }\r\n            }\r\n          });\r\n\r\n          weeklyData.push(weekData);\r\n        }\r\n\r\n        setExercises(Array.from(exercises));\r\n        setData(weeklyData);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data. Please check sheet permissions.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const colors = [\r\n    '#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#0088fe', '#00c49f',\r\n    '#ff8042', '#a4de6c', '#d0ed57', '#83a6ed', '#8dd1e1', '#ff6b6b'\r\n  ];\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500 p-4\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-[800px] p-4\">\r\n      <LineChart width={1000} height={700} data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"middle\" />\r\n        {exercises.map((exercise, index) => (\r\n          <Line \r\n            key={exercise}\r\n            type=\"monotone\" \r\n            dataKey={exercise} \r\n            stroke={colors[index % colors.length]}\r\n            dot={{ r: 4 }}\r\n            connectNulls\r\n          />\r\n        ))}\r\n      </LineChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseProgressChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}